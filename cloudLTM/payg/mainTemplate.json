{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/edwoodjrjr/f5-azure-solution-templates/develop/cloudLTM/payg",
            "metadata": {
                "description": "The base URL for marketplace deployment.",
                "artifactsBaseUrl": ""
            }
        },
        "location": {
            "type":"string",
            "metadata": {
                "description": "The location of the deployment"
            }
        },
        "solutionDeploymentName": {
            "metadata": {
                "description": "A unique name for this deployment."
            },
            "type": "string"
        },
        "adminUsername": {
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
            "type": "string"
        },
        "adminPassword": {
            "metadata": {
                "description": "Password to login to the Virtual Machine."
            },
            "type": "securestring"
        },
        "licensedBandwidth": {
            "allowedValues": [
                "25m",
                "200m",
                "1g"
            ],
            "defaultValue": "200m",
            "metadata": {
                "description": "The amount of licensed bandwidth (Mbps) you want the PAYG image to use."
            },
            "type": "string"
        },
        "instanceType": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Hardware Instance."
            },
            "allowedValues": [
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_F2S",
                "Standard_F4S",
                "Standard_F8S"
            ]
        },
        "imageName": {
            "allowedValues": [
                "good",
                "better",
                "best"
            ],
            "defaultValue": "Good",
            "metadata": {
                "description": "F5 SKU (IMAGE) to you want to deploy. Note: The disk size of the VM will be determined based on the option you select."
            },
            "type": "string"
        },
        "bigIpVersion": {
            "allowedValues": [
                "13.1.0200",
                "13.0.03118",
                "12.1.22193"
            ],
            "defaultValue": "13.1.0200",
            "metadata": {
                "description": "F5 BIG-IP version you want to use."
            },
            "type": "string"
        },
        "managedDisks": {
            "allowedValues": [
                "yes",
                "no"
            ],
            "defaultValue": "yes",
            "metadata": {
                "description": "Use managed disks."
            },
            "type": "string"
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "New or Existing Storage Account"
            }
        },
        "storageAccountExistingRGName": {
            "type": "string",
            "defaultValue": "NOT_SPECIFIED",
            "metadata": {
                "description": "Existing Storage Account Resoure Group name"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "ltmst",
            "metadata": {
                "description": "Unique name for the new Storage Account."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "Storage account type."
            },
            "allowedValues": [
                "Premium_LRS"
            ]
        },
        "publicIpNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "New or Existing Public IP"
            }
        },
        "publicIpExistingRGName": {
            "type": "string",
            "defaultValue": "NOT_SPECIFIED",
            "metadata": {
                "description": "Existing Virtual Network Resource Group name"
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "ltm-pip",
            "metadata": {
                "description": "Unique name for the Public IP used to access the Web Application Firewalls for management."
            }
        },
        "dnsLabel": {
            "defaultValue": "REQUIRED",
            "metadata": {
                "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine"
            },
            "type": "string"
        },
        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "metadata": {
                "description": "New or Existing Virtual Network"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "ltm-vnet",
            "metadata": {
                "description": "Specify the virtual network name."
            }
        },
        "vnetExistingRGName": {
            "type": "string",
            "defaultValue": "NOT_SPECIFIED",
            "metadata": {
                "description": "Existing Virtual Network name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Specify the virtual network address space."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "subnet1",
            "metadata": {
                "description": "Specify the virtual subnet name wher the BIG-IP will reside."
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Specify the virtual subnet address space."
            }
        },
        "privateIpAddressRangeStart": {
            "type": "string",
            "defaultValue": "0.0.0.0",
            "metadata": {
                "description": "Enter an IP address for the BIG-IP."
            }
        },
        "restrictedSrcAddress": {
            "defaultValue": "*",
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        },
        "ntpServer": {
            "defaultValue": "0.pool.ntp.org",
            "metadata": {
                "description": "If you would like to change the NTP server the BIG-IP uses replace the default ntp server with your choice."
            },
            "type": "string"
        },
        "timeZone": {
            "defaultValue": "UTC",
            "metadata": {
                "description": "If you would like to change the time zone the BIG-IP uses then enter your choice."
            },
            "allowedValues": [
                "America/Puerto_Rico",
                "America/New_York",
                "America/Chicago",
                "America/Denver",
                "America/Phoenix",
                "America/Los_Angeles",
                "America/Anchorage",
                "Pacific/Honolulu",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/ComodRivadavia",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Atka",
                "America/Bahia",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Buenos_Aires",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Catamarca",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Coral_Harbour",
                "America/Cordoba",
                "America/Costa_Rica",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Ensenada",
                "America/Fortaleza",
                "America/Fort_Wayne",
                "America/Glace_Bay",
                "America/Godthab",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Indianapolis",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Jujuy",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Knox_IN",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Louisville",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Mendoza",
                "America/Menominee",
                "America/Merida",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montreal",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Porto_Acre",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Rosario",
                "America/Santa_Isabel",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Shiprock",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Virgin",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Athens",
                "Europe/Belfast",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kiev",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Tiraspol",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Ashkhabad",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Calcutta",
                "Asia/Choibalsan",
                "Asia/Chongqing",
                "Asia/Chungking",
                "Asia/Colombo",
                "Asia/Dacca",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Gaza",
                "Asia/Harbin",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Istanbul",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kashgar",
                "Asia/Kathmandu",
                "Asia/Katmandu",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macao",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Nicosia",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qyzylorda",
                "Asia/Rangoon",
                "Asia/Riyadh",
                "Asia/Saigon",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Tel_Aviv",
                "Asia/Thimbu",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Ujung_Pandang",
                "Asia/Ulaanbaatar",
                "Asia/Ulan_Bator",
                "Asia/Urumqi",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Asmera",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Timbuktu",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "Australia/ACT",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Canberra",
                "Australia/Currie",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/LHI",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/North",
                "Australia/NSW",
                "Australia/Perth",
                "Australia/Queensland",
                "Australia/South",
                "Australia/Sydney",
                "Australia/Tasmania",
                "Australia/Victoria",
                "Australia/West",
                "Australia/Yancowinna",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faeroe",
                "Atlantic/Faroe",
                "Atlantic/Jan_Mayen",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/Stanley",
                "Atlantic/St_Helena",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Chatham",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Enderbury",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Johnston",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Ponape",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Samoa",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Truk",
                "Pacific/Wake",
                "Pacific/Wallis",
                "Pacific/Yap",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/South_Pole",
                "Antarctica/Syowa",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "UTC"
            ],
            "type": "string"
        },
        "vmScaleSetMinCount": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The minimum (and default) number of BIG-IP VEs that will be deployed into the VM Scale Set."
            },
            "type": "int"
        },
        "vmScaleSetMaxCount": {
            "allowedValues": [
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "defaultValue": 4,
            "metadata": {
                "description": "The maximum number of BIG-IP VEs that can be deployed into the VM Scale Set."
            },
            "type": "int"
        },
        "scaleOutThroughput": {
            "allowedValues": [
                50,
                55,
                60,
                65,
                70,
                75,
                80,
                85,
                90,
                95
            ],
            "defaultValue": 90,
            "metadata": {
                "description": "The percentage of 'Network Out' throughput that triggers a Scale Out event.  This is factored as a percentage of the F5 PAYG image bandwidth (Mbps) size you choose."
            },
            "type": "int"
        },
        "scaleInThroughput": {
            "allowedValues": [
                5,
                10,
                15,
                20,
                25,
                30,
                35,
                40,
                45
            ],
            "defaultValue": 10,
            "metadata": {
                "description": "The percentage of 'Network Out' throughput that triggers a Scale In event.  This is factored as a percentage of the F5 PAYG image bandwidth (Mbps) size you choose."
            },
            "type": "int"
        },
        "scaleTimeWindow": {
            "allowedValues": [
                5,
                10,
                15,
                30
            ],
            "defaultValue": 10,
            "metadata": {
                "description": "The time window required to trigger a scale event (in and out). This is used to determine the amount of time needed for a threshold to be breached, as well as to prevent excessive scaling events (flapping)."
            },
            "type": "int"
        },
        "customEmail": {
            "metadata": {
                "description": "Email address for scale event notifications."
            },
            "defaultValue": "OPTIONAL",
            "type": "string"
        },
        "tenantId": {
            "metadata": {
                "description": "Your Azure service principal application tenant ID."
            },
            "type": "string"
        },
        "clientId": {
            "metadata": {
                "description": "Your Azure service principal application client ID."
            },
            "type": "string"
        },
        "servicePrincipalSecret": {
            "metadata": {
                "description": "Your Azure service principal application secret."
            },
            "type": "securestring"
        }
    },
    "variables": {
        "subscriptionID": "[subscription().subscriptionId]",
        "bigIpNicPortMap": {
            "1": {
                "Port": "[parameters('bigIpVersion')]"
            },
            "2": {
                "Port": "443"
            },
            "3": {
                "Port": "443"
            },
            "4": {
                "Port": "443"
            },
            "5": {
                "Port": "443"
            },
            "6": {
                "Port": "443"
            }
        },
        "bigIpVersionPortMap": {
            "12.1.22193": {
                "Port": 443
            },
            "13.0.03118": {
                "Port": 8443
            },
            "13.1.0200": {
                "Port": 8443
            },
            "443": {
                "Port": 443
            },
            "latest": {
                "Port": 8443
            }
        },
        "apiVersionCompute": "2017-12-01",
		"apiVersionNetwork": "2017-11-01",
		"apiVersionStorage": "2017-10-01",
		"apiVersionTemplate": "2017-08-01",
        "apiVersionInsights": "2015-04-01",
        "singleQuote": "'",
        "f5Tag": "82e08e16-fc62-4bf0-8916-e1c02dc871cd",
        "f5TemplateTag": "cloud_ltm_solution",
        "f5CloudLibsTag": "v3.2.2",
        "f5CloudLibsAzureTag": "v1.2.1",
        "f5CloudIappsTag": "v1.0.2",
        "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 1e7b5cb66e140bb4c5650b225612905e17bd167556b0b4366efce2d9138f8be86eec51c09eb96c3ffc2d25ba8965bae840e9d43b7c42dab08cdfad4d3d152509\n            set hashes(f5-cloud-libs-aws.tar.gz) 549aa436be806c80640f8dce570128fdf84613bf0688392e018639412c63818d25f26635b0aaf23e8cdf60b0d331de9218ed51a9cdfbf33db6e683727169a727\n            set hashes(f5-cloud-libs-azure.tar.gz) 08b5a04c2e24c73288037f02734703bba3349d2c1548e618223c927de08769c44b638b60cec3b644dbdb14d242e8f589215b174a22fe28487b9049666158c0d1\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) e242eb222ac3d1860df3305f6abec674c1e4f823318bb9d08d30a57dba3acd69e2a45eb52d141effd056a75b12ad4055a2d69b3d1d9a029a369de872dbef5a8a\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 8d7491accdb1818f09353cd5b03d317ccd87e6801ac25b47aa49984a0f4ca313e8f3ecc1c9c904ce01c89dfeeacd3487655c8d45cc43f83c2ccd54d71f4f7d5f\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature ovvaKnQES5v5qKb7reE7dSzbb/EC5X/8onLV4YE75Ru8LR7LxNzFiNXpNM73SjIx1noAcEqGNBIQ0wFlqKh26gPLFPmwBsiu4jrU/MHkd/CwjHipE1uQiy79476rQTgiugwh+56j2ss96nKCtNKbKHsyrtGgO1GQWskz+B3qyx7XYa1gi3fNBkDzd5YuJ8HFJGjffbbMBpGW/fFUL0QQsGAO6QLhzKdxonm4hbqR8E/x+BmPzU08O9QzSG4tFcPQRN40py9tTEkyqnAziolDPArmBkx5aCRqy5lnzBd90GJemMLx5QcGYn0D4EP9aQZTquDtrT9A+kgPXRmukmi8JA==\n    signing-key /Common/f5-irule\n}', variables('singleQuote'))]",
        "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit 1\nfi\necho loaded verifyHash\nconfig_loc=\"/config/cloud/\"\nhashed_file_list=\"${config_loc}f5-cloud-libs.tar.gz ${config_loc}f5-cloud-libs-azure.tar.gz\"\nfor file in $hashed_file_list; do\necho \"verifying $file\"\n/usr/bin/tmsh run cli script verifyHash $file\nif [ $? != 0 ]; then\necho \"$file is not valid\"\nexit 1\nfi\necho \"verified $file\"\ndone\necho \"expanding $hashed_file_list\"\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/node_modules\ntar xvfz /config/cloud/f5-cloud-libs-azure.tar.gz -C /config/cloud/node_modules/f5-cloud-libs/node_modules\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "imageNameToLower": "[toLower(parameters('imageName'))]",
        "skuToUse": "[concat('f5-bigip-virtual-edition-', parameters('licensedBandwidth'), '-', variables('imageNameToLower'),'-hourly')]",
        "offerToUse": "[if(or(equals(parameters('bigIpVersion'), '12.1.22193'), equals(parameters('bigIpVersion'), '13.0.03118')), 'f5-big-ip-hourly', concat('f5-big-ip-', variables('imageNameToLower'))]",
        "publicIpRGArray": {
            "existing": "[parameters('publicIpExistingRGName')]",
            "new": "[resourceGroup().name]"
        },
        "publicIpRG": "[variables('publicIpRGArray')[parameters('publicIpNewOrExisting')]]",
        "publicIpID": "[resourceId(variables('publicIpRG'),'Microsoft.Network/publicIPAddresses',parameters('publicIpName'))]",
        "bigIpNicPortValue": "[variables('bigIpNicPortMap')['1'].Port]",
        "bigIpMgmtPort": 8443,
        "storageAccountRGArray": {
            "existing": "[parameters('storageAccountExistingRGName')]",
            "new": "[resourceGroup().name]"
        },
        "storageAccountRG": "[variables('storageAccountRGArray')[parameters('storageAccountNewOrExisting')]]",
        "doStorage": "[concat(parameters('managedDisks'), parameters('storageAccountNewOrExisting'))]",
        "osDiskArray": {
            "yes": {
                "caching": "ReadOnly",
                "createOption": "FromImage",
                "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                }
            },
            "no": {
                "caching": "ReadOnly",
                "createOption": "FromImage",
                "name": "vmssosdisk",
                "vhdContainers": [
                    "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/vmss1')]"
                ]
            }
        },
        "diagStorageAccountName": "[concat(uniqueString(resourceGroup().id, deployment().name), 'data000')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-mgmt-nsg'))]",
        "vnetTemplateLink": "[concat(parameters('baseUrl'), '/', parameters('vnetNewOrExisting'),'Vnet.json')]",
        "loadBalancerName": "[concat(variables('dnsLabel'),'-alb')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "vmssName": "[concat(parameters('dnsLabel'),'-vmss')]",
        "25m": 26214400,
        "200m": 209715200,
        "1g": 1073741824,
        "scaleOutCalc": "[mul(variables(parameters('licensedBandwidth')), parameters('scaleOutThroughput'))]",
        "scaleInCalc": "[mul(variables(parameters('licensedBandwidth')), parameters('scaleInThroughput'))]",
        "scaleOutNetworkBits": "[div(variables('scaleOutCalc'), 100)]",
        "scaleInNetworkBits": "[div(variables('scaleInCalc'), 100)]",
        "scaleOutNetworkBytes": "[div(variables('scaleOutNetworkBits'), 8)]",
        "scaleInNetworkBytes": "[div(variables('scaleInNetworkBits'), 8)]",
        "timeWindow": "[concat('PT', parameters('scaleTimeWindow'), 'M')]",
        "customEmailToUse": [
            "[parameters('customEmail')]"
        ],
        "customEmail": "[take(variables('customEmailToUse'), length(replace(parameters('customEmail'), 'OPTIONAL', '')))]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionNetwork')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "condition": "[equals(parameters('publicIpNewOrExisting'),'new')]",
            "name": "[parameters('publicIpName')]",
            "location": "[parameters('location')]",
            "tags": {
                "f5": "[variables('f5Tag')]",
                "f5Template": "[variables('f5TemplateTag')]"
            },
            "properties": {
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabel')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetwork')]",
            "location": "[parameters('location')]",
            "name": "[concat(variables('dnsLabel'), '-mgmt-nsg')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "mgmt_allow_https",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('bigIpMgmtPort')]",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "mgmt_allow_ssh",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "direction": "Inbound",
                            "priority": 102,
                            "protocol": "TCP",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "tags": {
                "f5": "[variables('f5Tag')]",
                "f5Template": "[variables('f5TemplateTag')]"
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersionTemplate')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('dnsLabel'), '-mgmt-nsg')]"
            ],
            "name": "linkedVnetTemplate",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "apiVersionNetwork": { "value": "[variables('apiVersionNetwork')]" },
                    "vnetName": { "value": "[parameters('vnetName')]" },
                    "vnetAddressPrefix": { "value": "[parameters('vnetAddressPrefix')]" },
                    "subnetName": { "value": "[parameters('subnetName')]" },
                    "subnetAddressPrefix": { "value": "[parameters('subnetAddressPrefix')]" },
                    "vnetExistingRGName": { "value": "[parameters('vnetExistingRGName')]" }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetwork')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpName'))]"
            ],
            "location": "[parameters('location')]",
            "name": "[variables('loadBalancerName')]",
            "properties": {
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackEnd"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIpID')]"
                            }
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "sshnatpool",
                        "properties": {
                            "backendPort": 22,
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPortRangeStart": 50001,
                            "frontendPortRangeEnd": 50100,
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "mgmtnatpool",
                        "properties": {
                            "backendPort": "[variables('bigIpMgmtPort')]",
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "frontendPortRangeStart": 50101,
                            "frontendPortRangeEnd": 50200,
                            "protocol": "tcp"
                        }
                    }
                ],
                "loadBalancingRules": "",
                "probes": ""
            },
            "tags": {
                "f5": "[variables('f5Tag')]",
                "f5Template": "[variables('f5TemplateTag')]"
            },
            "type": "Microsoft.Network/loadBalancers"
        },
        {
            "name": "[variables('diagStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "apiVersion": "[variables('apiVersionStorage')]",
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "condition": "[equals(variables('doStorage'), 'nonew')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "apiVersion": "[variables('apiVersionStorage')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "[replace(parameters('storageAccountType'),'_LRS', ' ')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersionCompute')]",
            "dependsOn": [
                "linkedVnetTemplate",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagStorageAccountName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "location": "[parameters('location')]",
            "name": "[variables('vmssName')]",
            "plan": {
                "name": "[variables('skuToUse')]",
                "product": "[variables('offerToUse')]",
                "publisher": "f5-networks"
            },
            "properties": {
                "overprovision": "false",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "main",
                                "properties": {
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('mkdir -p /config/cloud/node_modules; AZURE_CREDENTIALS_FILE=/config/cloud/azCredentials; BIG_IP_CREDENTIALS_FILE=/config/cloud/passwd; /usr/bin/install -m 400 /dev/null $AZURE_CREDENTIALS_FILE; /usr/bin/install -m 400 /dev/null $BIG_IP_CREDENTIALS_FILE; echo ', variables('singleQuote'), parameters('adminPassword'), variables('singleQuote'), ' > $BIG_IP_CREDENTIALS_FILE; echo ', variables('singleQuote'), '{\"clientId\": \"', parameters('clientId'), '\", \"tenantId\": \"', parameters('tenantId'), '\", \"secret\": \"', parameters('servicePrincipalSecret'), '\", \"subscriptionId\": \"', variables('subscriptionID'), '\", \"storageAccount\": \"', variables('diagStorageAccountName'), '\", \"storageKey\": \"', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccountName')), variables('apiVersionStorage')).key1, '\"}', variables('singleQuote'), ' > $AZURE_CREDENTIALS_FILE; cp f5-cloud-libs*.tar.gz* /config/cloud; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; bash /config/installCloudLibs.sh; bash /config/cloud/node_modules/f5-cloud-libs/node_modules/f5-cloud-libs-azure/scripts/autoscale.sh --resourceGroup ', resourceGroup().name, ' --vmssName ', variables('vmssName'), ' --userName ', parameters('adminUsername'), ' --password $BIG_IP_CREDENTIALS_FILE --azureSecretFile $AZURE_CREDENTIALS_FILE --managementPort ', variables('bigIpMgmtPort'), ' --ntpServer ', parameters('ntpServer'), ' --timeZone ', parameters('timeZone'), '; if [[ $? == 0 ]]; then tmsh load sys application template f5.service_discovery.tmpl; else exit 1; fi')]"
                                    },
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "settings": {
                                        "fileUris": [
                                            "[concat(parameters('baseUrl'), '/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]",
                                            "[concat(parameters('baseUrl'), '/f5-cloud-iapps/', variables('f5CloudIappsTag'), '/f5-service-discovery/f5.service_discovery.tmpl')]",
                                            "[concat(parameters('baseUrl'), '/f5-cloud-libs-azure/', variables('f5CloudLibsAzureTag'), '/dist/f5-cloud-libs-azure.tar.gz')]"
                                        ]
                                    },
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0"
                                }
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "nic1",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "ipconfig1",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', variables('subscriptionID'),'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', variables('subscriptionID'),'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/sshnatpool')]"
                                                    },
                                                    {
                                                        "id": "[concat('/subscriptions/', variables('subscriptionID'),'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/mgmtnatpool')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[concat(reference('linkedVnetTemplate').outputs.vnetID.value,'/subnets/',parameters('subnetName'))]"
                                                }
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[variables('nsgID')]"
                                    },
                                    "primary": "true"
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computerNamePrefix": "[variables('vmssName')]"
                    },
                    "storageProfile": {
                        "imageReference": {
                            "offer": "[variables('offerToUse')]",
                            "publisher": "f5-networks",
                            "sku": "[variables('skuToUse')]",
                            "version": "[parameters('bigIpVersion')]"
                        },
                        "osDisk": "[variables('osDiskArray')[parameters('managedDisks')]]"
                    }
                }
            },
            "sku": {
                "capacity": "[parameters('vmScaleSetMinCount')]",
                "name": "[parameters('instanceType')]",
                "tier": "Standard"
            },
            "tags": {
                "f5": "[variables('f5Tag')]",
                "f5Template": "[variables('f5TemplateTag')]"
            },
            "type": "Microsoft.Compute/virtualMachineScaleSets"
        },
        {
            "apiVersion": "[variables('apiVersionInsights')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
            ],
            "location": "[parameters('location')]",
            "name": "autoscaleconfig",
            "properties": {
                "enabled": true,
                "name": "autoscaleconfig",
                "notifications": [
                    {
                        "email": {
                            "customEmails": "[variables('customEmail')]",
                            "sendToSubscriptionAdministrator": false,
                            "sendToSubscriptionCoAdministrators": false
                        },
                        "operation": "Scale"
                    }
                ],
                "profiles": [
                    {
                        "capacity": {
                            "default": "[parameters('vmScaleSetMinCount')]",
                            "maximum": "[parameters('vmScaleSetMaxCount')]",
                            "minimum": "[parameters('vmScaleSetMinCount')]"
                        },
                        "name": "Profile1",
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Network Out",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/', variables('subscriptionID'), '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                                    "operator": "GreaterThan",
                                    "statistic": "Average",
                                    "threshold": "[variables('scaleOutNetworkBytes')]",
                                    "timeAggregation": "Average",
                                    "timeGrain": "PT1M",
                                    "timeWindow": "[variables('timeWindow')]"
                                },
                                "scaleAction": {
                                    "cooldown": "PT1M",
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Network Out",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/', variables('subscriptionID'), '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                                    "operator": "LessThan",
                                    "statistic": "Average",
                                    "threshold": "[variables('scaleInNetworkBytes')]",
                                    "timeAggregation": "Average",
                                    "timeGrain": "PT1M",
                                    "timeWindow": "[variables('timeWindow')]"
                                },
                                "scaleAction": {
                                    "cooldown": "PT1M",
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1"
                                }
                            }
                        ]
                    }
                ],
                "targetResourceUri": "[concat('/subscriptions/', variables('subscriptionID'), '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
            },
            "type": "Microsoft.Insights/autoscaleSettings"
        }
    ],
    "outputs": {
        "GUI-URL": {
            "type": "string",
            "value": "[concat('https://', reference(concat('/subscriptions/', variables('subscriptionID'), '/resourceGroups/', variables('publicIpRG'), '/providers/Microsoft.Network/publicIPAddresses/', parameters('publicIpName')), variables('apiVersionNetwork')).ipAddress,':50101', ' - 50200')]"
        },
        "SSH-URL": {
            "type": "string",
            "value": "[concat(reference(concat('/subscriptions/', variables('subscriptionID'), '/resourceGroups/', variables('publicIpRG'), '/providers/Microsoft.Network/publicIPAddresses/', parameters('publicIpName')), variables('apiVersionNetwork')).ipAddress,' 8022')]"
        }
    }
}
